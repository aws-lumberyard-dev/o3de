/*
* All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
* its licensors.
*
* For complete copyright and license terms please see the LICENSE at the root of this
* distribution (the "License"). All use of this software is governed by the License,
* or, if provided, by the license below or the license accompanying this file. Do not
* remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*
*/

#include <scenesrg.srgi>

#define TILE_DIM_X 16
#define TILE_DIM_Y 16

ShaderResourceGroup PassSrg : SRG_PerPass
{
    Texture2D<float4> m_inputColor;
    Texture2D<float4> m_inputDepth;
    RWTexture2D<float4> m_outputColor;
    Texture2D<float2> m_motionVectors;
    Texture2D<float4> m_lastFrameAccumulation;

    float m_minContribution;
}

// Do fancy LDS stuff after initial implementation works.
/*
groupshared float3 shared_samples[(TILE_DIM_X + 2) * (TILE_DIM_Y + 2)];
groupshared float shared_depth[(TILE_DIM_X + 2) * (TILE_DIM_Y + 2)];
*/

[numthreads(TILE_DIM_X, TILE_DIM_Y, 1)]
void MainCS(
    uint3 dispatchThreadID : SV_DispatchThreadID, 
    uint3 groupID : SV_GroupID, 
    uint groupIndex : SV_GroupIndex)
{
    PassSrg::m_outputColor[dispatchThreadID.xy] = PassSrg::m_inputColor[dispatchThreadID.xy] * PassSrg::m_minContribution;
}